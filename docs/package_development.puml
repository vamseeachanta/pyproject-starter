@startuml package_development
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor red
skinparam titleBackgroundColor Tomato

title Python Package Development \n Recommended Practices

start

    partition "New Library - Setup" {


        :Make a copy/clone of cookiecutter library;
            note right
                Use library of choice. An exmaple:
                https://github.com/vamseeachanta/py-package-template
            end note

        :Map to new repo;
            note right
                If cloned, delete the .git folder to break dependency from cloned repo
                Initilize this as new repo using choice tools i.e. IDE, Host etc.
            end note

        :Rename key folders;
            note right
                {py-package-template}, 
                {py-package-template}/src/{py_package_template}
                etc.
            end note

        :Rename key filenames;
            note right
                {py-package-template}/src/{py_package_template}/{calculation}.py
                {py-package-template}/src/{py_package_template}/tests/test_{calculation}.py
                etc.
            end note

        :Update pyproject.toml;
            note right
                Review entire file line by line.
                Update key items below:
                - package name
                - dependencies
                - version management
            end note
    }

    partition "Development" {
    :Write test;
        note right
            For Test Driven Development (TDD)
            Modify template test
        end note
    :Install Package locally i.e.
    an editable install;
        note right
            Use .toml file //python -m pip install -e .//
            (or)
            Use conda-build //conda develop .//
            Development in an IDE with breakpoints 
            on local files etc.
        end note
    }

    partition "Testing" {
    : run required tests locally;

    :Perform github tests upon code push;
        note right
            Utilize github actions
            Include latest (and previous) python versions etc.
        end note
    }


    partition "Code Deployment - Github" {

    : Commit code with appropriate comments;
    : Push to github;

    }

    partition "Library Deployment - pypi" {
    : Use bumpver to update version;
        note right
            pip install bumpver (optional)
            bumpver update --patch (or)
            bumpver update --minor (or)
            bumpver update --major

            patch & dry run:
            bumpver update --patch --dry

            patch and beta:
            bumpver update --patch --tag=beta

        end note
    : Build dist files i.e. Wheels (.whl) and .tar.gz files;
        note right
            pip install build
            python -m build
        end note
    : Push dist files to pypi;
        note right
            conda install twine
            twine upload dist/*
            Need to create pypi account if not already done so
        end note
    }

stop

footer
%date("yyyy.MM.dd' at 'HH:mm")
%filename()
end footer

@enduml